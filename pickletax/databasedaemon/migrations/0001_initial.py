# Generated by Django 2.2 on 2019-05-17 18:46

import databasedaemon.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(max_length=100, validators=[databasedaemon.models.city_validator])),
                ('address', models.CharField(max_length=100)),
                ('info', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('number', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[databasedaemon.models.classroom_number_validator])),
                ('seat_number', models.IntegerField(validators=[databasedaemon.models.classroom_seat_number_validator])),
                ('access_rights', models.CharField(choices=[('свободный', 'свободный'), ('необходимость преподавателя', 'необходимость преподавателя'), ('только для сотрудников', 'только для сотрудников')], default='свободный', max_length=20)),
                ('type', models.CharField(choices=[('лекционная', 'лекционная'), ('семинарская', 'семинарская'), ('лаборатория', 'лаборатория'), ('для сотрудников', 'для сотрудников')], default='семинарская', max_length=20)),
                ('info', models.CharField(blank=True, max_length=500)),
                ('campus_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='databasedaemon.Campus')),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email_domain', models.CharField(default='hse', max_length=20, validators=[databasedaemon.models.email_domain_validator])),
                ('class_type', models.CharField(choices=[('урок', 'урок'), ('пара', 'пара')], default='пара', max_length=20)),
                ('max_lesson_number', models.IntegerField(default=9)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100, validators=[databasedaemon.models.email_validator])),
                ('good_faith_index', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('студент', 'студент'), ('преподаватель', 'преподаватель'), ('редактор', 'редактор'), ('сервер', 'сервер')], default='студент', max_length=20)),
                ('email_verification_code', models.CharField(blank=True, max_length=20)),
                ('institution_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='databasedaemon.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='ClassroomActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(validators=[databasedaemon.models.class_number_validator])),
                ('vacant', models.CharField(choices=[('свободна', 'свободна'), ('зарезервирована', 'зарезервирована'), ('занята', 'занята')], default='свободна', max_length=20)),
                ('info', models.CharField(blank=True, max_length=500)),
                ('campus_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='databasedaemon.Campus')),
                ('classroom_number', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='databasedaemon.Classroom')),
            ],
        ),
        migrations.AddField(
            model_name='campus',
            name='institution_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='databasedaemon.Institution'),
        ),
    ]
